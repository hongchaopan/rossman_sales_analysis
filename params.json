{
  "name": "Rossmann Sales Prediction ",
  "tagline": "Members: Hong Zhu, Zhihao Lin, Weiyi Chen, Zona Kostic",
  "body": "### **Introduction**\r\nPredicting sales performance is one of the key challenges every business face. It is important for firms to predict customer demands to offer the right product at the right time and at the right place. The importance of this issue is underlined by the fact that figuratively a bazillion consulting firms are on the market trying to offer sales forecasting services to businesses of all sizes. Some of these firms rely on advanced data analytics techniques, the kind of which we will be covering in CS-109 classes.\r\n\r\n##### **Background**\r\n> [Rossmann](http://www.rossmann.pl) is the largest drugstore in Germany. Moreover, it operates over 3,000 drug stores in 7 European countries. In 2015, [Rossmann](http://www.rossmann.pl) store managers are tasked with predicting their daily sales for up to six weeks in advance. Store sales are influenced by many factors, including promotions, competition, school and state holidays, seasonality, and locality. With thousands of individual managers predicting sales based on their unique circumstances, the accuracy of results can be quite varied.\r\n\r\n##### **Kaggle**\r\nIn their [Kaggle competition](https://www.kaggle.com/c/rossmann-store-sales), [Rossmann](http://www.rossmann.pl) challenged Kagglers to predict 6 weeks of daily sales for 1,115 stores located across Germany. Reliable sales forecasts enable store managers to create effective staff schedules that increase productivity and motivation. Our team has been working on this project consists of: [Hong Zhu](https://github.com/zhu2548972), [Zhihao Lin](https://cn.linkedin.com/in/zhihao-lin-16033213), [Weiyi Chen](https://github.com/weiyialanchen), [Zona Kostic (TF)](https://github.com/zonakostic). The project is based on data given by this [Kaggle competition](https://www.kaggle.com/c/rossmann-store-sales).\r\n\r\n### **Data**\r\nThe original dataset provided on Kaggle consists of the following variables.\r\n\r\n|     Train     \t|           Store           \t|      Test     \t|\r\n|:-------------:\t|:-------------------------:\t|:-------------:\t|\r\n|     Store     \t|           Store           \t|       Id      \t|\r\n|   DayOfWeek   \t|         StoreType         \t|     Store     \t|\r\n|     Sales     \t|         Assortment        \t|   DayOfWeek   \t|\r\n|   Customers   \t|    CompetitionDistance    \t|      Date     \t|\r\n|      Open     \t| CompetitionOpenSinceMonth \t|      Open     \t|\r\n|     Promo     \t|           Promo2          \t|     Promo     \t|\r\n|  StateHoliday \t|      Promo2SinceWeek      \t|  StateHoliday \t|\r\n| SchoolHoliday \t|      Promo2SinceYear      \t| SchoolHoliday \t|\r\n|               \t|       PromoInternal       \t|               \t|\r\n\r\nThree data sets were provided. As usual, a train and test data set were provided. An additional data set for Store data was also provided. The variable names are quite self-explanatory, more details can be found on [Kaggle Data](https://www.kaggle.com/c/rossmann-store-sales/data).\r\n\r\n### **Literature Study**\r\nBy running through the data science process we will be able to answer the following research questions:\r\n\r\n* To what extend is sales performance influenced by factors like: promotions, competition, school and state holidays, seasonality, and locality?\r\n* What is an appropriate model to predict sales?\r\n \r\nGoing through resources for background on the project, we summarized the following results from top performance models.\t\t \t\t\t\t\t\r\n\t\t\t\t\r\n| Model                                            \t| RMSPE  \t|\r\n|--------------------------------------------------\t|--------\t|\r\n| Linear regression                                \t| 41.70% \t|\r\n| Recurrent Neural Nets                            \t| 24.88% \t|\r\n| Locally constant solution                        \t| 21.99% \t|\r\n| Hidden Markov Model                              \t| 16.52% \t|\r\n| Locally constant solution (with 3 more features) \t| 14.22% \t|\r\n| Linear regression by groups                      \t| 12.50% \t|\r\n| Random Forest                                    \t| 11.98% \t|\r\n| Xgboost random forests with 300 iterations       \t| 11.52% \t|\r\n| Gradient Boosting                                \t| 10.44% \t|\r\n| Ensemble of xgboost models                       \t| 9.10%  \t|\r\n\r\n### **Approach**\r\nOur approach follows the generic Data Science process. The process starts with **asking an interesting question**. The second step is to **get the data**. Then, we will **explore our data**, which is the usual step to take after obtaining data. We will show plots to illustrate properties, trends, anomalies and patterns of the data. \r\n\r\nAfter plotting the first results, we will apply different **statistical models** and compare them to choose the most performing one. Finally, we will **answer our initial questions** and discuss future research directions.\r\n\r\n### **Exploratory Data Analysis**\r\nIn the EDA process, we learned more about the data. A general description shows that the training data set has 8 variables, and 6 of them (Store, DayOfWeek, Open, Promo, and StateHoliday, SchoolHoliday) can be used as predictors for modeling the Sales. There is missing data in the Open column so we need to handle this later. There are 1115 stores in the training data and 856 stores in the testing data, and all the stores in the testing data is in the training data set.\r\n\r\n##### **Holiday vs. Sales**\r\nThe boxplot of holiday versus sales shows that there is an increase in sales during state holidays, while the sales amount remain roughly the same whether it’s school holiday or not. It’s reasonable since most customers are adults and they don’t have time to go shopping during school holidays.\r\n\r\n![](https://github.com/weiyialanchen/rossman_sales_analysis/raw/master/images/holiday.png)\r\n\r\n##### **Power of Sundays**\r\nThe analysis on weekdays versus sales shows that people tends to do shopping on Sundays, followed by Monday and Friday. It’s interesting to see that people do less shopping on Saturday, although they don’t need to work on Saturday.\r\n\r\n![](https://github.com/weiyialanchen/rossman_sales_analysis/raw/master/images/sundays.png)\r\n\r\n##### **Seasonal Impacts**\r\nWe checked whether there are seasonal effects on the sales. The time series plot over year shows that people tends to buy more stuff during the holiday seasons (November and December), which agrees with our common belief.\r\n\r\n##### **Store Types Research**\r\nWe checked the impact of different store types on sales. The time series plot shows that store type B will have huge impact on sales, while the seasonal effect on different store types are roughly the same. \r\n\r\n![](https://github.com/weiyialanchen/rossman_sales_analysis/raw/master/images/storeType.png)\r\n\r\n##### **Dealing with Missing Data and Filling Data Gaps**\r\nIn training dataset, we see the number of stores reported every day is not exactly the same (see Figure 15). There are 180 stores with missing values from 7/31 2014 to 12/31 2014. To fill the gap of these 180 stores, we took either majority or mean rules to do data cleaning and wrangling.\r\n\r\n![](https://github.com/weiyialanchen/rossman_sales_analysis/raw/master/images/missingData.png)\r\n\r\n### **Baseline Models**\r\n\r\nWe used the lasso regression (available in sklearn) and xgboost’s implementation of the gradient boosting machine (gbm). For feature engineering, we one-hot-encoded all the categorical variables and filled in the missing values in 5 of the variables with -1. It should be noted that xgboost has built-in mechanisms to deal with missing values and all one must do is to indicate to the algorithm how missing values are represented in the data.\r\n\r\n##### **Optimization**\r\nA large part of this milestone is focused on finding the optimal hyperparameters of the algorithms. For lasso, it will be the alpha (the larger the alpha, the greater the amount of regularization and the lower the model complexity). For xgboost, there are many hyperparameters and the important ones are max_depth (maximum depth of each), eta (the learning rate). Because there are a large of hyperparameters to tune, we used the optimization package, hyperopt.\r\n\r\n##### **Results**\r\nTo select the optimal hyperparameters, 5-fold cross validation is used. The best 5-fold rmspe of lasso is 49.16% with a standard deviation 0.0790, which is quite poor, whereas the best 5-fold rmspe of xgboost is 16.20% with a standard deviation of 0.0976. Below shows that for xgboost, we should probably increase the max_depth to increase the performance.\r\n\r\n![xgboost rmspe with varying hyperparameters](https://github.com/weiyialanchen/rossman_sales_analysis/raw/master/images/xgboost.png)\r\n\r\n##### **Prediction**\r\nThis is initiated to show that the first 6 months of 2014. Promo periods are slightly shaded, state holidays are marked with dash lines, color-coded to the value of StateHoliday.\r\n\r\n![](https://github.com/weiyialanchen/rossman_sales_analysis/raw/master/images/prediction.png)\r\n\r\n### **Future Works**\r\nFuture work on this dataset can be divided into three directions - \r\n\r\n**Autoregression**: One of the best predictor of future sales are past sales (time dimension is determinant). Very good method for exploring seasonality and autocorrelation is Autoregression (AR).\r\n\r\n**Feature engineering**: There must be a reason for Customers feature staying in the training set. There are clear patterns influenced by different holidays that we can use to estimate the mean number of Customers that we can use later on.\r\n\r\n**Boosting (xgBoost)**: After feature engineering, we could try with Decision Trees again. The best shown method according to our experience as well as the papers we all read from is Decision Tree with Boosting. Especially with using the xgBoost library. It is supervised learning, ensemble of classification and regression trees.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}